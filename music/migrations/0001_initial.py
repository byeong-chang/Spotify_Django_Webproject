# Generated by Django 4.2 on 2023-04-26 10:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('artist_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('artist_name', models.CharField(max_length=200)),
                ('artist_popularity', models.CharField(max_length=200)),
                ('artist_followers', models.IntegerField()),
                ('artist_image_link', models.CharField(default=None, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('track_name', models.CharField(max_length=200)),
                ('track_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('track_popularity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('artist_name', models.CharField(default=None, max_length=200)),
                ('track_image_link', models.CharField(default=None, max_length=200)),
                ('track_release_date', models.DateField(default=None, null=True)),
                ('similar_track_id1', models.CharField(default=None, max_length=200)),
                ('similar_track_id2', models.CharField(default=None, max_length=200)),
                ('similar_track_id3', models.CharField(default=None, max_length=200)),
                ('similar_track_id4', models.CharField(default=None, max_length=200)),
                ('similar_track_id5', models.CharField(default=None, max_length=200)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.artist')),
            ],
        ),
        migrations.CreateModel(
            name='TrackBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField()),
                ('username', models.CharField(max_length=150)),
                ('dislike', models.ManyToManyField(related_name='disliker_TrackBoard', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(related_name='liker_TrackBoard', to=settings.AUTH_USER_MODEL)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('music_name', models.CharField(max_length=40)),
                ('singer', models.CharField(max_length=40)),
                ('music_url', models.TextField()),
                ('views_number', models.IntegerField()),
                ('image_url', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArtistBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField()),
                ('username', models.CharField(max_length=150)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.artist')),
                ('dislike', models.ManyToManyField(related_name='disliker_ArtistBoard', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(related_name='liker_ArtistBoard', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
